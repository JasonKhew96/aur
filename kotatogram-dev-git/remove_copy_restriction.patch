diff --git a/Telegram/Resources/langs/rewrites/en.json b/Telegram/Resources/langs/rewrites/en.json
index e50ac3e25..b52011ce5 100644
--- a/Telegram/Resources/langs/rewrites/en.json
+++ b/Telegram/Resources/langs/rewrites/en.json
@@ -204,6 +204,7 @@
 	"ktg_filters_hide_edit_toast": "Edit button is hidden.\nYou can enable it back in Kotatogram Settings.",
 	"ktg_settings_telegram_sites_autologin": "Auto-login on Telegram sites",
 	"ktg_mute_for_selected_time": "For selected time",
+	"ktg_remove_copy_restriction": "Remove copy restriction",
 	"ktg_send_preview": "Send preview",
 	"ktg_send_silent_preview": "Send preview silent",
 	"ktg_reminder_preview": "Remind with preview",
diff --git a/Telegram/SourceFiles/core/click_handler_types.cpp b/Telegram/SourceFiles/core/click_handler_types.cpp
index 249939386..e402907da 100644
--- a/Telegram/SourceFiles/core/click_handler_types.cpp
+++ b/Telegram/SourceFiles/core/click_handler_types.cpp
@@ -15,6 +15,7 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 #include "main/main_session.h"
 #include "ui/boxes/confirm_box.h"
 #include "kotato/boxes/kotato_confirm_box.h"
+#include "kotato/kotato_settings.h"
 #include "ui/text/text_entity.h"
 #include "ui/text/text_utilities.h"
 #include "ui/toast/toast.h"
@@ -294,7 +295,7 @@ void MonospaceClickHandler::onClick(ClickContext context) const {
 		const auto hasCopyRestriction = item
 			&& (!item->history()->peer->allowsForwarding()
 				|| item->forbidsForward());
-		if (hasCopyRestriction) {
+		if (hasCopyRestriction && !::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 			Ui::Toast::Show(item->history()->peer->isBroadcast()
 				? tr::lng_error_nocopy_channel(tr::now)
 				: tr::lng_error_nocopy_group(tr::now));
diff --git a/Telegram/SourceFiles/history/history_inner_widget.cpp b/Telegram/SourceFiles/history/history_inner_widget.cpp
index eedcd4cb6..b0c6407ef 100644
--- a/Telegram/SourceFiles/history/history_inner_widget.cpp
+++ b/Telegram/SourceFiles/history/history_inner_widget.cpp
@@ -1770,7 +1770,7 @@ void HistoryInner::mouseActionFinish(
 	if (QGuiApplication::clipboard()->supportsSelection()
 		&& !_selected.empty()
 		&& _selected.cbegin()->second != FullSelection
-		&& !hasCopyRestriction(_selected.cbegin()->first)) {
+		&& (!hasCopyRestriction(_selected.cbegin()->first) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 		const auto [item, selection] = *_selected.cbegin();
 		if (const auto view = item->mainView()) {
 			TextUtilities::SetClipboardText(
@@ -1986,7 +1986,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 	const auto addPhotoActions = [&](not_null<PhotoData*> photo, HistoryItem *item) {
 		const auto media = photo->activeMediaView();
 		const auto itemId = item ? item->fullId() : FullMsgId();
-		if (!photo->isNull() && media && media->loaded() && !hasCopyRestriction(item)) {
+		if (!photo->isNull() && media && media->loaded() && (!hasCopyRestriction(item) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 			_menu->addAction(tr::lng_context_save_image(tr::now), App::LambdaDelayed(st::defaultDropdownMenu.menu.ripple.hideDuration, this, [=] {
 				savePhotoToFile(photo);
 			}), &st::menuIconSaveImage);
@@ -2037,7 +2037,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 				showContextInFolder(document);
 			}, &st::menuIconShowInFolder);
 		}
-		if (!hasCopyRestriction(item)) {
+		if (!hasCopyRestriction(item) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 			_menu->addAction(lnkIsVideo ? tr::lng_context_save_video(tr::now) : (lnkIsVoice ? tr::lng_context_save_audio(tr::now) : (lnkIsAudio ? tr::lng_context_save_audio_file(tr::now) : tr::lng_context_save_file(tr::now))), App::LambdaDelayed(st::defaultDropdownMenu.menu.ripple.hideDuration, this, [=] {
 				saveDocumentToFile(itemId, document);
 			}), &st::menuIconDownload);
@@ -2085,7 +2085,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 	if (lnkPhoto || lnkDocument) {
 		const auto item = _dragStateItem;
 		const auto itemId = item ? item->fullId() : FullMsgId();
-		if (isUponSelected > 0 && !hasCopyRestrictionForSelected()) {
+		if (isUponSelected > 0 && (!hasCopyRestrictionForSelected() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 			_menu->addAction(
 				(isUponSelected > 1
 					? tr::lng_context_copy_selected_items(tr::now)
@@ -2167,7 +2167,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 		const auto view = item ? item->mainView() : nullptr;
 
 		if (isUponSelected > 0) {
-			if (!hasCopyRestrictionForSelected()) {
+			if (!hasCopyRestrictionForSelected() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 				_menu->addAction(
 					((isUponSelected > 1)
 						? tr::lng_context_copy_selected_items(tr::now)
@@ -2192,7 +2192,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 								Api::ToggleFavedSticker(document, itemId);
 							}, isFaved ? &st::menuIconUnfave : &st::menuIconFave);
 						}
-						if (!hasCopyRestriction(item)) {
+						if (!hasCopyRestriction(item) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 							_menu->addAction(tr::lng_context_save_image(tr::now), App::LambdaDelayed(st::defaultDropdownMenu.menu.ripple.hideDuration, this, [=] {
 								saveDocumentToFile(itemId, document);
 							}), &st::menuIconDownload);
@@ -2221,7 +2221,7 @@ void HistoryInner::showContextMenu(QContextMenuEvent *e, bool showFromTouch) {
 				if (!item->isService()
 					&& view
 					&& !link
-					&& !hasCopyRestriction(item)
+					&& (!hasCopyRestriction(item) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))
 					&& (view->hasVisibleText() || mediaHasTextForCopy)) {
 					_menu->addAction(tr::lng_context_copy_text(tr::now), [=] {
 						copyContextText(itemId);
@@ -2318,7 +2318,7 @@ bool HistoryInner::hasCopyRestriction(HistoryItem *item) const {
 }
 
 bool HistoryInner::showCopyRestriction(HistoryItem *item) {
-	if (!hasCopyRestriction(item)) {
+	if (!hasCopyRestriction(item) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		return false;
 	}
 	Ui::ShowMultilineToast({
diff --git a/Telegram/SourceFiles/history/view/history_view_context_menu.cpp b/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
index 5c1503f31..d1368fd1c 100644
--- a/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_context_menu.cpp
@@ -139,7 +139,7 @@ void AddPhotoActions(
 		HistoryItem *item,
 		not_null<ListWidget*> list) {
 	const auto contextId = item ? item->fullId() : FullMsgId();
-	if (!list->hasCopyRestriction(item)) {
+	if (!list->hasCopyRestriction(item) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		menu->addAction(
 			tr::lng_context_save_image(tr::now),
 			App::LambdaDelayed(
@@ -203,7 +203,7 @@ void AddSaveDocumentAction(
 		HistoryItem *item,
 		not_null<DocumentData*> document,
 		not_null<ListWidget*> list) {
-	if (list->hasCopyRestriction(item)) {
+	if (list->hasCopyRestriction(item) && !::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		return;
 	}
 	const auto origin = Data::FileOrigin(
@@ -940,7 +940,7 @@ base::unique_qptr<Ui::PopupMenu> FillContextMenu(
 		list,
 		hasWhoReactedItem ? st::whoReadMenu : st::popupMenuWithIcons);
 
-	if (request.overSelection && !list->hasCopyRestrictionForSelected()) {
+	if (request.overSelection && (!list->hasCopyRestrictionForSelected() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 		const auto text = request.selectedItems.empty()
 			? tr::lng_context_copy_selected(tr::now)
 			: tr::lng_context_copy_selected_items(tr::now);
@@ -967,7 +967,7 @@ base::unique_qptr<Ui::PopupMenu> FillContextMenu(
 		}
 		if (!link
 			&& (view->hasVisibleText() || mediaHasTextForCopy)
-			&& !list->hasCopyRestriction(view->data())) {
+			&& (!list->hasCopyRestriction(view->data()) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 			const auto asGroup = (request.pointState != PointState::GroupPart);
 			result->addAction(tr::lng_context_copy_text(tr::now), [=] {
 				if (const auto item = owner->message(itemId)) {
diff --git a/Telegram/SourceFiles/history/view/history_view_list_widget.cpp b/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
index 87b8611f7..cfbee6293 100644
--- a/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
+++ b/Telegram/SourceFiles/history/view/history_view_list_widget.cpp
@@ -1224,7 +1224,7 @@ bool ListWidget::hasCopyRestriction(HistoryItem *item) const {
 
 bool ListWidget::showCopyRestriction(HistoryItem *item) {
 	const auto type = _delegate->listCopyRestrictionType(item);
-	if (type == CopyRestrictionType::None) {
+	if (type == CopyRestrictionType::None || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		return false;
 	}
 	Ui::ShowMultilineToast({
@@ -2009,13 +2009,13 @@ void ListWidget::keyPressEvent(QKeyEvent *e) {
 	} else if (e == QKeySequence::Copy
 		&& (hasSelectedText() || hasSelectedItems())
 		&& !showCopyRestriction()
-		&& !hasCopyRestrictionForSelected()) {
+		&& (!hasCopyRestrictionForSelected() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 		TextUtilities::SetClipboardText(getSelectedText());
 #ifdef Q_OS_MAC
 	} else if (e->key() == Qt::Key_E
 		&& e->modifiers().testFlag(Qt::ControlModifier)
 		&& !showCopyRestriction()
-		&& !hasCopyRestrictionForSelected()) {
+		&& (!hasCopyRestrictionForSelected() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 		TextUtilities::SetClipboardText(getSelectedText(), QClipboard::FindBuffer);
 #endif // Q_OS_MAC
 	} else if (e == QKeySequence::Delete) {
@@ -2590,7 +2590,7 @@ void ListWidget::mouseActionFinish(
 	if (QGuiApplication::clipboard()->supportsSelection()
 		&& _selectedTextItem
 		&& _selectedTextRange.from != _selectedTextRange.to
-		&& !hasCopyRestriction(_selectedTextItem)) {
+		&& (!hasCopyRestriction(_selectedTextItem) || ::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 		if (const auto view = viewForItem(_selectedTextItem)) {
 			TextUtilities::SetClipboardText(
 				view->selectedText(_selectedTextRange),
@@ -2826,7 +2826,7 @@ std::unique_ptr<QMimeData> ListWidget::prepareDrag() {
 	}
 	auto pressedHandler = ClickHandler::getPressed();
 	if (dynamic_cast<VoiceSeekClickHandler*>(pressedHandler.get())
-		|| hasCopyRestriction()) {
+		|| (hasCopyRestriction() && !::Kotato::JsonSettings::GetBool("remove_copy_restriction"))) {
 		return nullptr;
 	}
 
diff --git a/Telegram/SourceFiles/kotato/kotato_settings.cpp b/Telegram/SourceFiles/kotato/kotato_settings.cpp
index 9b0513d82..aa18b79ac 100644
--- a/Telegram/SourceFiles/kotato/kotato_settings.cpp
+++ b/Telegram/SourceFiles/kotato/kotato_settings.cpp
@@ -471,6 +471,9 @@ const std::map<QString, Definition, std::greater<QString>> DefinitionMap {
 	{ "emoji_sidebar_right_click", {
 		.type = SettingType::BoolSetting,
 		.defaultValue = false, }},
+	{ "remove_copy_restriction", {
+		.type = SettingType::BoolSetting,
+		.defaultValue = false, }},
 };
 
 using OldOptionKey = QString;
diff --git a/Telegram/SourceFiles/kotato/kotato_settings_menu.cpp b/Telegram/SourceFiles/kotato/kotato_settings_menu.cpp
index 88249d0d3..6cc357202 100644
--- a/Telegram/SourceFiles/kotato/kotato_settings_menu.cpp
+++ b/Telegram/SourceFiles/kotato/kotato_settings_menu.cpp
@@ -376,6 +376,7 @@ void SetupKotatoChats(
 
 	SettingsMenuJsonSwitch(ktg_settings_emoji_sidebar, emoji_sidebar);
 	SettingsMenuJsonSwitch(ktg_settings_emoji_sidebar_right_click, emoji_sidebar_right_click);
+	SettingsMenuJsonSwitch(ktg_remove_copy_restriction, remove_copy_restriction);
 
 	AddSkip(container);
 	AddDivider(container);
diff --git a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
index 6b77cfefe..d08db5889 100644
--- a/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
+++ b/Telegram/SourceFiles/media/view/media_view_overlay_widget.cpp
@@ -8,6 +8,7 @@ https://github.com/telegramdesktop/tdesktop/blob/master/LEGAL
 #include "media/view/media_view_overlay_widget.h"
 
 #include "kotato/kotato_lang.h"
+#include "kotato/kotato_settings.h"
 #include "apiwrap.h"
 #include "api/api_attached_stickers.h"
 #include "api/api_peer_photo.h"
@@ -565,7 +566,7 @@ bool OverlayWidget::hasCopyRestriction() const {
 }
 
 bool OverlayWidget::showCopyRestriction() {
-	if (!hasCopyRestriction()) {
+	if (!hasCopyRestriction() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		return false;
 	}
 	Ui::ShowMultilineToast({
@@ -735,7 +736,7 @@ void OverlayWidget::refreshNavVisibility() {
 }
 
 bool OverlayWidget::contentCanBeSaved() const {
-	if (hasCopyRestriction()) {
+	if (hasCopyRestriction() && !::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		return false;
 	} else if (_photo) {
 		return _photo->hasVideo() || _photoMedia->loaded();
@@ -928,7 +929,7 @@ void OverlayWidget::fillContextMenuActions(const MenuCallback &addAction) {
 			[=] { showInFolder(); },
 			&st::mediaMenuIconShowInFolder);
 	}
-	if (!hasCopyRestriction()) {
+	if (!hasCopyRestriction() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		if ((_document && documentContentShown()) || (_photo && _photoMedia->loaded())) {
 			addAction(
 				tr::lng_mediaview_copy(tr::now),
@@ -972,7 +973,7 @@ void OverlayWidget::fillContextMenuActions(const MenuCallback &addAction) {
 			[=] { deleteMedia(); },
 			&st::mediaMenuIconDelete);
 	}
-	if (!hasCopyRestriction()) {
+	if (!hasCopyRestriction() || ::Kotato::JsonSettings::GetBool("remove_copy_restriction")) {
 		addAction(
 			tr::lng_mediaview_save_as(tr::now),
 			[=] { saveAs(); },
